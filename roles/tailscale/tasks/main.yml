- name: Check if tailscaled service is running
  ansible.builtin.systemd:
    name: tailscaled
  register: tailscaled_service
  changed_when: false
  failed_when: false

- name: Skip Tailscale Setup
  ansible.builtin.meta: end_host
  when: tailscaled_service.status.ActiveState == "active"

- name: Check if Tailscale is installed
  ansible.builtin.stat:
    path: /usr/sbin/tailscale
  register: tailscale_installed

- name: Download Tailscale install script
  ansible.builtin.get_url:
    url: https://tailscale.com/install.sh
    dest: /tmp/tailscale-install.sh
    mode: '0755'
  when: not tailscale_installed.stat.exists

- name: Run Tailscale install script
  ansible.builtin.command: /tmp/tailscale-install.sh
  when: not tailscale_installed.stat.exists
  changed_when: true
  notify: Restart tailscaled

- name: Ensure tailscaled is enabled and started
  ansible.builtin.systemd:
    name: tailscaled
    enabled: true
    state: started

- name: Check Tailscale status
  ansible.builtin.command: tailscale status
  register: tailscale_status
  changed_when: false
  failed_when: false
  when: tailscale_installed.stat.exists

# The Tailscale auth key should be stored in an encrypted vault:
# Create group_vars/tailscale_hosts/vault.yml with:
# tailscale_auth_key: "tskey-YOUR_KEY_HERE"

- name: Authenticate with Tailscale if logged out and auth key is provided
  ansible.builtin.command: >
    tailscale up --authkey={{ tailscale_auth_key }}
  when:
    - tailscale_auth_key is defined
    - tailscale_auth_key | length > 0
    - "'Logged out.' in tailscale_status.stdout"
  changed_when: true

- name: Enable Tailscale SSH on the host
  ansible.builtin.command: tailscale up --ssh
  when: tailscale_auth_key is defined and tailscale_installed.stat.exists
  changed_when: true
  tags:
    - tailscale_ssh
